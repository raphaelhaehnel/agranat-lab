# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import analyzer

''' Number of digits to display for the period '''
PRECISION = 6

''' The microscope scale from pixel to um '''
SCALE = 1.0 / 0.0678

''' The correction angle for the image '''
ANGLE = 359.5


class AnotherWindow(QWidget):
    """
    This "window" is a QWidget. If it has no parent, it
    will appear as a free-floating window as we want.
    """

    def __init__(self):
        super().__init__()
        self.setupUi()
        self.setText()

        self.angle = ANGLE
        self.scale = SCALE

    def setupUi(self):
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./group_logo_cutted.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("./group_logo_cutted.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.setWindowIcon(icon)
        self.verticalLayoutWidget = QtWidgets.QWidget(self)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(20, 10, 297, 121))
        self.setFixedSize(331, 191)
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.horizontalLayout_2.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.lineEdit.setMaxLength(15)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout_2.addWidget(self.lineEdit)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_3.addWidget(self.label_2)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.lineEdit_2.setMaxLength(10)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout_3.addWidget(self.lineEdit_2)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(20, 140, 295, 35))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pushButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_4.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_4.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_4.addWidget(self.pushButton_3)

        self.pushButton.clicked.connect(self.slot_default)
        self.pushButton_2.clicked.connect(self.slot_ok)
        self.pushButton_3.clicked.connect(self.slot_cancel)

    def slot_default(self):
        self.scale = SCALE
        self.angle = ANGLE
        self.lineEdit.setText(str(SCALE))
        self.lineEdit_2.setText(str(ANGLE))

    def slot_ok(self):
        self.scale = float(self.lineEdit.text())
        self.angle = float(self.lineEdit_2.text())
        self.hide()

    def slot_cancel(self):
        self.lineEdit.setText(str(self.scale))
        self.lineEdit_2.setText(str(self.angle))
        self.hide()

    def setText(self):
        self.setWindowTitle("Parameters")
        self.label.setText("Scale")
        self.lineEdit.setText(str(SCALE))
        self.label_2.setText("Rotation angle")
        self.lineEdit_2.setText(str(ANGLE))
        self.pushButton.setText("Set default")
        self.pushButton_2.setText("Ok")
        self.pushButton_3.setText("Cancel")


class Ui_MainWindow(QMainWindow):

    def __init__(self):
        super().__init__()
        self.file_path = None
        self.data = None
        self.options = [False, False, False, False, False, False]
        self.save = False
        self.threadpool = QThreadPool()
        self.param = AnotherWindow()
        print("Multithreading with maximum %d threads" % self.threadpool.maxThreadCount())

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(551, 398)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./group_logo_cutted.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("./group_logo_cutted.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(40, 30, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(30, 80, 181, 251))
        self.groupBox.setObjectName("groupBox")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.groupBox)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 20, 160, 221))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.checkBox = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.checkBox.setObjectName("checkBox")
        self.verticalLayout.addWidget(self.checkBox)
        self.checkBox_2 = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.checkBox_2.setObjectName("checkBox_2")
        self.verticalLayout.addWidget(self.checkBox_2)
        self.checkBox_3 = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.checkBox_3.setObjectName("checkBox_3")
        self.verticalLayout.addWidget(self.checkBox_3)
        self.checkBox_4 = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.checkBox_4.setObjectName("checkBox_4")
        self.verticalLayout.addWidget(self.checkBox_4)
        self.checkBox_5 = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.checkBox_5.setObjectName("checkBox_5")
        self.verticalLayout.addWidget(self.checkBox_5)
        self.checkBox_6 = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.checkBox_6.setObjectName("checkBox_6")
        self.verticalLayout.addWidget(self.checkBox_6)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(230, 80, 120, 80))
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.groupBox_2)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 20, 101, 51))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.radioButton = QtWidgets.QRadioButton(self.verticalLayoutWidget_2)
        self.radioButton.setChecked(True)
        self.radioButton.setObjectName("radioButton")
        self.verticalLayout_2.addWidget(self.radioButton)
        self.radioButton_2 = QtWidgets.QRadioButton(self.verticalLayoutWidget_2)
        self.radioButton_2.setChecked(False)
        self.radioButton_2.setObjectName("radioButton_2")
        self.verticalLayout_2.addWidget(self.radioButton_2)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(190, 30, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(360, 30, 160, 201))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_1 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_1.setObjectName("label_1")
        self.verticalLayout_3.addWidget(self.label_1)
        self.lineEdit_1 = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.lineEdit_1.setText("")
        self.lineEdit_1.setReadOnly(True)
        self.lineEdit_1.setClearButtonEnabled(False)
        self.lineEdit_1.setObjectName("lineEdit_1")
        self.verticalLayout_3.addWidget(self.lineEdit_1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_3.addItem(spacerItem)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_3.addWidget(self.label_2)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.lineEdit_2.setAutoFillBackground(False)
        self.lineEdit_2.setReadOnly(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_3.addWidget(self.lineEdit_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 551, 26))
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionDefine_parameters = QtWidgets.QAction(MainWindow)
        self.actionDefine_parameters.setObjectName("actionDefine_parameters")
        self.menuFile.addAction(self.actionDefine_parameters)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.slot_load_image)
        self.pushButton_2.clicked.connect(self.slot_run)
        self.actionDefine_parameters.triggered.connect(self.slot_parameters)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def update_state(self):
        self.options[0] = self.checkBox.isChecked()
        self.options[1] = self.checkBox_2.isChecked()
        self.options[2] = self.checkBox_3.isChecked()
        self.options[3] = self.checkBox_4.isChecked()
        self.options[4] = self.checkBox_5.isChecked()
        self.options[5] = self.checkBox_6.isChecked()
        self.save = self.radioButton_2.isChecked()

    def slot_load_image(self):
        """
        Slot connected to the button "Load image".
        :return: none
        """
        path = QFileDialog.getOpenFileName(MainWindow, "Open")[0]
        if path:
            filename, file_extension = analyzer.os.path.splitext(path)
            if file_extension == ".tif" or file_extension == ".png" or file_extension == ".jpeg":
                self.file_path = path
                self.show_good_dialog()
            else:
                self.file_path = None
                self.show_bad_dialog(msg="Bad image format")

    def slot_run(self):
        """
        Slot connected to the button "Run".
        :return: none
        """
        self.update_state()

        # Run the funtion slot_run_helper in another thread
        worker = Worker(self.slot_run_helper)

        if self.file_path:
            self.threadpool.start(worker)
        else:
            self.show_bad_dialog(msg="No image loaded")
            self.lineEdit_1.setText("")
            self.lineEdit_2.setText("0.0")

    def slot_run_helper(self):
        self.data = analyzer.main(self.file_path, self.param.angle, self.param.scale)
        self.lineEdit_1.setText(str(self.file_path))
        self.lineEdit_2.setText(str(self.data["period"])[:PRECISION] + " um")
        analyzer.display_graphs(self.data, self.options, self.file_path, self.save, self.param.scale)

    def slot_parameters(self):
        '''
        To keep a reference to the w variable, we use the self object.
        :return:
        '''
        self.param.show()

    def show_good_dialog(self):
        msgBox = QMessageBox()
        msgBox.setIcon(QMessageBox.Information)
        msgBox.setText("The image has been loaded !")
        msgBox.setWindowTitle("Image loaded")
        msgBox.setStandardButtons(QMessageBox.Ok)
        msgBox.exec_()

    def show_bad_dialog(self, msg):
        msgBox = QMessageBox()
        msgBox.setIcon(QMessageBox.Critical)
        msgBox.setText(msg)
        msgBox.setWindowTitle("Error")
        msgBox.setStandardButtons(QMessageBox.Ok)
        msgBox.exec_()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Striations analyzer"))
        self.pushButton.setText(_translate("MainWindow", "Load image"))
        self.groupBox.setTitle(_translate("MainWindow", "Items to display/save"))
        self.checkBox.setText(_translate("MainWindow", "Original image"))
        self.checkBox_2.setText(_translate("MainWindow", "Rotated image"))
        self.checkBox_3.setText(_translate("MainWindow", "Filtered image"))
        self.checkBox_4.setText(_translate("MainWindow", "Graph line"))
        self.checkBox_5.setText(_translate("MainWindow", "Image line"))
        self.checkBox_6.setText(_translate("MainWindow", "Fourier transform"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Render"))
        self.radioButton.setText(_translate("MainWindow", "Display"))
        self.radioButton_2.setText(_translate("MainWindow", "Save"))
        self.pushButton_2.setText(_translate("MainWindow", "Run"))
        self.label_1.setText(_translate("MainWindow", "File path"))
        self.label_2.setText(_translate("MainWindow", "Period"))
        self.lineEdit_2.setText(_translate("MainWindow", "0.0"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionDefine_parameters.setText(_translate("MainWindow", "Define parameters"))


class Worker(QRunnable):
    '''
    Worker thread
    Code from https://www.learnpyqt.com/tutorials/multithreading-pyqt-applications-qthreadpool/
    '''

    def __init__(self, foo, *args, **kwargs):
        super(Worker, self).__init__()
        self.foo = foo
        self.args = args
        self.kwargs = kwargs

    @pyqtSlot()
    def run(self):
        self.foo()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
